---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Install OpenVPN and Easy-RSA
  apt:
    name: "{{ openvpn_packages }}"
    state: present

- name: Ensure Easy-RSA directory exists
  block:
    - name: Check if Easy-RSA directory exists
      stat:
        path: "{{ easy_rsa_path }}"
      register: easy_rsa_exists

    - name: Create Easy-RSA directory if it doesn't exist
      command: make-cadir "{{ easy_rsa_path }}"
      become: yes
      when: not easy_rsa_exists.stat.exists

- name: Ensure PKI directory exists
  block:
    - name: Check if PKI directory exists
      stat:
        path: "{{ easy_rsa_pki_path }}"
      register: pki_exists

    - name: Create PKI directory if it doesn't exist
      command: ./easyrsa init-pki
      args:
        chdir: "{{ easy_rsa_path }}"
      become: yes
      when: not pki_exists.stat.exists

- name: Create and manage CA and server certificates
  block:
    - name: Check if CA certificate already exists
      stat:
        path: "{{ easy_rsa_pki_path }}/ca.crt"
      register: ca_cert

    - name: Check if server certificate already exists
      stat:
        path: "{{ easy_rsa_pki_path }}/issued/server.crt"
      register: server_cert

    - name: Check if server key already exists
      stat:
        path: "{{ easy_rsa_pki_path }}/private/server.key"
      register: server_key

    - name: Check if Diffie-Hellman parameters already exist
      stat:
        path: "{{ easy_rsa_pki_path }}/dh.pem"
      register: dh_params

    - name: Check if TLS key already exists
      stat:
        path: "{{ easy_rsa_pki_path }}/ta.key"
      register: tls_key

    - name: Build CA without password and common name
      shell: echo "MyOpenVPN_CA" | ./easyrsa build-ca nopass
      args:
        chdir: "{{  easy_rsa_path  }}"
      become: yes
      when: not ca_cert.stat.exists

    - name: Generate server request without password
      shell: echo "MyOpenVPN_Server" | ./easyrsa gen-req server nopass
      args:
        chdir: "{{ easy_rsa_path }}"
      become: yes
      when: not server_cert.stat.exists

    - name: Request sign for server certificate
      shell: echo "yes" | ./easyrsa sign-req server server
      args:
        chdir: "{{ easy_rsa_path }}"
      become: yes
      when: not server_cert.stat.exists

    - name: Generate Diffie-Hellman parameters
      command: ./easyrsa gen-dh
      args:
        chdir: "{{ easy_rsa_path }}"
      become: yes
      when: not dh_params.stat.exists

    - name: Generate TLS key
      command: openvpn --genkey --secret pki/ta.key
      args:
        chdir: "{{ easy_rsa_path }}"
      become: yes
      when: not tls_key.stat.exists

- name: Ensure OpenVPN directory
  file:
    path: /etc/openvpn
    state: directory
    mode: '0755'

- name: Copy required files to OpenVPN directory
  copy:
    src: "{{ item }}"
    dest: "{{ openvpn_config_path }}/"
    remote_src: yes
  with_items: 
    - "{{ easy_rsa_pki_path }}/ca.crt"
    - "{{ easy_rsa_pki_path }}/issued/server.crt"
    - "{{ easy_rsa_pki_path }}/private/server.key"
    - "{{ easy_rsa_pki_path }}/dh.pem"
    - "{{ easy_rsa_pki_path }}/ta.key"

- name: Apply OpenVPN server configuration
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf

- name: Start OpenVPN server
  systemd:
    name: openvpn@server
    state: started
    enabled: yes
    
- name: Create client configuration file
  template:
    src: client.ovpn.j2
    dest: "client.ovpn"
